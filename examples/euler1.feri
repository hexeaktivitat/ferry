def fn abs(a: Int) -> Int: (
    if (a < 0) then: a * (0 - 1)
    else: a
)

def fn modulo(a: Int, b: Int) -> Int: (
    if (a - b) < b then: (
        abs(a - b)
    ) else: (
        modulo(abs(a-b), b)
    )
)

// modulo operator needed for this

let sum: Int = 0

for n: Int in 1..10: 
    if modulo(n, 3) == 0 then: 
        sum = sum + n
    else: (
        if modulo(n, 5) == 0 then: 
            sum = sum + n
    )

sum